/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LogoutImport } from './routes/logout'
import { Route as LoginImport } from './routes/login'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as AuthNamespacesRouteImport } from './routes/_auth/namespaces/route'
import { Route as AuthUsersIndexImport } from './routes/_auth/users/index'
import { Route as AuthNamespacesIndexImport } from './routes/_auth/namespaces/index'
import { Route as AuthUsersUserIdImport } from './routes/_auth/users/$userId'
import { Route as AuthNamespacesNamespaceIdIndexImport } from './routes/_auth/namespaces/$namespaceId/index'
import { Route as AuthNamespacesNamespaceIdRunsRouteImport } from './routes/_auth/namespaces/$namespaceId/runs/route'
import { Route as AuthNamespacesNamespaceIdRunsIndexImport } from './routes/_auth/namespaces/$namespaceId/runs/index'
import { Route as AuthNamespacesNamespaceIdDatasetsIndexImport } from './routes/_auth/namespaces/$namespaceId/datasets/index'
import { Route as AuthNamespacesNamespaceIdRunsRunIdImport } from './routes/_auth/namespaces/$namespaceId/runs/$runId'
import { Route as AuthNamespacesNamespaceIdDatasetsDatasetIdIndexImport } from './routes/_auth/namespaces/$namespaceId/datasets/$datasetId/index'
import { Route as AuthNamespacesNamespaceIdDatasetsDatasetIdCompareImport } from './routes/_auth/namespaces/$namespaceId/datasets/$datasetId/compare'

// Create/Update Routes

const LogoutRoute = LogoutImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthNamespacesRouteRoute = AuthNamespacesRouteImport.update({
  id: '/namespaces',
  path: '/namespaces',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthUsersIndexRoute = AuthUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthNamespacesIndexRoute = AuthNamespacesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthNamespacesRouteRoute,
} as any)

const AuthUsersUserIdRoute = AuthUsersUserIdImport.update({
  id: '/users/$userId',
  path: '/users/$userId',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthNamespacesNamespaceIdIndexRoute =
  AuthNamespacesNamespaceIdIndexImport.update({
    id: '/$namespaceId/',
    path: '/$namespaceId/',
    getParentRoute: () => AuthNamespacesRouteRoute,
  } as any)

const AuthNamespacesNamespaceIdRunsRouteRoute =
  AuthNamespacesNamespaceIdRunsRouteImport.update({
    id: '/$namespaceId/runs',
    path: '/$namespaceId/runs',
    getParentRoute: () => AuthNamespacesRouteRoute,
  } as any)

const AuthNamespacesNamespaceIdRunsIndexRoute =
  AuthNamespacesNamespaceIdRunsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthNamespacesNamespaceIdRunsRouteRoute,
  } as any)

const AuthNamespacesNamespaceIdDatasetsIndexRoute =
  AuthNamespacesNamespaceIdDatasetsIndexImport.update({
    id: '/$namespaceId/datasets/',
    path: '/$namespaceId/datasets/',
    getParentRoute: () => AuthNamespacesRouteRoute,
  } as any)

const AuthNamespacesNamespaceIdRunsRunIdRoute =
  AuthNamespacesNamespaceIdRunsRunIdImport.update({
    id: '/$runId',
    path: '/$runId',
    getParentRoute: () => AuthNamespacesNamespaceIdRunsRouteRoute,
  } as any)

const AuthNamespacesNamespaceIdDatasetsDatasetIdIndexRoute =
  AuthNamespacesNamespaceIdDatasetsDatasetIdIndexImport.update({
    id: '/$namespaceId/datasets/$datasetId/',
    path: '/$namespaceId/datasets/$datasetId/',
    getParentRoute: () => AuthNamespacesRouteRoute,
  } as any)

const AuthNamespacesNamespaceIdDatasetsDatasetIdCompareRoute =
  AuthNamespacesNamespaceIdDatasetsDatasetIdCompareImport.update({
    id: '/$namespaceId/datasets/$datasetId/compare',
    path: '/$namespaceId/datasets/$datasetId/compare',
    getParentRoute: () => AuthNamespacesRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/_auth/namespaces': {
      id: '/_auth/namespaces'
      path: '/namespaces'
      fullPath: '/namespaces'
      preLoaderRoute: typeof AuthNamespacesRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/users/$userId': {
      id: '/_auth/users/$userId'
      path: '/users/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof AuthUsersUserIdImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/namespaces/': {
      id: '/_auth/namespaces/'
      path: '/'
      fullPath: '/namespaces/'
      preLoaderRoute: typeof AuthNamespacesIndexImport
      parentRoute: typeof AuthNamespacesRouteImport
    }
    '/_auth/users/': {
      id: '/_auth/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthUsersIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/namespaces/$namespaceId/runs': {
      id: '/_auth/namespaces/$namespaceId/runs'
      path: '/$namespaceId/runs'
      fullPath: '/namespaces/$namespaceId/runs'
      preLoaderRoute: typeof AuthNamespacesNamespaceIdRunsRouteImport
      parentRoute: typeof AuthNamespacesRouteImport
    }
    '/_auth/namespaces/$namespaceId/': {
      id: '/_auth/namespaces/$namespaceId/'
      path: '/$namespaceId'
      fullPath: '/namespaces/$namespaceId'
      preLoaderRoute: typeof AuthNamespacesNamespaceIdIndexImport
      parentRoute: typeof AuthNamespacesRouteImport
    }
    '/_auth/namespaces/$namespaceId/runs/$runId': {
      id: '/_auth/namespaces/$namespaceId/runs/$runId'
      path: '/$runId'
      fullPath: '/namespaces/$namespaceId/runs/$runId'
      preLoaderRoute: typeof AuthNamespacesNamespaceIdRunsRunIdImport
      parentRoute: typeof AuthNamespacesNamespaceIdRunsRouteImport
    }
    '/_auth/namespaces/$namespaceId/datasets/': {
      id: '/_auth/namespaces/$namespaceId/datasets/'
      path: '/$namespaceId/datasets'
      fullPath: '/namespaces/$namespaceId/datasets'
      preLoaderRoute: typeof AuthNamespacesNamespaceIdDatasetsIndexImport
      parentRoute: typeof AuthNamespacesRouteImport
    }
    '/_auth/namespaces/$namespaceId/runs/': {
      id: '/_auth/namespaces/$namespaceId/runs/'
      path: '/'
      fullPath: '/namespaces/$namespaceId/runs/'
      preLoaderRoute: typeof AuthNamespacesNamespaceIdRunsIndexImport
      parentRoute: typeof AuthNamespacesNamespaceIdRunsRouteImport
    }
    '/_auth/namespaces/$namespaceId/datasets/$datasetId/compare': {
      id: '/_auth/namespaces/$namespaceId/datasets/$datasetId/compare'
      path: '/$namespaceId/datasets/$datasetId/compare'
      fullPath: '/namespaces/$namespaceId/datasets/$datasetId/compare'
      preLoaderRoute: typeof AuthNamespacesNamespaceIdDatasetsDatasetIdCompareImport
      parentRoute: typeof AuthNamespacesRouteImport
    }
    '/_auth/namespaces/$namespaceId/datasets/$datasetId/': {
      id: '/_auth/namespaces/$namespaceId/datasets/$datasetId/'
      path: '/$namespaceId/datasets/$datasetId'
      fullPath: '/namespaces/$namespaceId/datasets/$datasetId'
      preLoaderRoute: typeof AuthNamespacesNamespaceIdDatasetsDatasetIdIndexImport
      parentRoute: typeof AuthNamespacesRouteImport
    }
  }
}

// Create and export the route tree

interface AuthNamespacesNamespaceIdRunsRouteRouteChildren {
  AuthNamespacesNamespaceIdRunsRunIdRoute: typeof AuthNamespacesNamespaceIdRunsRunIdRoute
  AuthNamespacesNamespaceIdRunsIndexRoute: typeof AuthNamespacesNamespaceIdRunsIndexRoute
}

const AuthNamespacesNamespaceIdRunsRouteRouteChildren: AuthNamespacesNamespaceIdRunsRouteRouteChildren =
  {
    AuthNamespacesNamespaceIdRunsRunIdRoute:
      AuthNamespacesNamespaceIdRunsRunIdRoute,
    AuthNamespacesNamespaceIdRunsIndexRoute:
      AuthNamespacesNamespaceIdRunsIndexRoute,
  }

const AuthNamespacesNamespaceIdRunsRouteRouteWithChildren =
  AuthNamespacesNamespaceIdRunsRouteRoute._addFileChildren(
    AuthNamespacesNamespaceIdRunsRouteRouteChildren,
  )

interface AuthNamespacesRouteRouteChildren {
  AuthNamespacesIndexRoute: typeof AuthNamespacesIndexRoute
  AuthNamespacesNamespaceIdRunsRouteRoute: typeof AuthNamespacesNamespaceIdRunsRouteRouteWithChildren
  AuthNamespacesNamespaceIdIndexRoute: typeof AuthNamespacesNamespaceIdIndexRoute
  AuthNamespacesNamespaceIdDatasetsIndexRoute: typeof AuthNamespacesNamespaceIdDatasetsIndexRoute
  AuthNamespacesNamespaceIdDatasetsDatasetIdCompareRoute: typeof AuthNamespacesNamespaceIdDatasetsDatasetIdCompareRoute
  AuthNamespacesNamespaceIdDatasetsDatasetIdIndexRoute: typeof AuthNamespacesNamespaceIdDatasetsDatasetIdIndexRoute
}

const AuthNamespacesRouteRouteChildren: AuthNamespacesRouteRouteChildren = {
  AuthNamespacesIndexRoute: AuthNamespacesIndexRoute,
  AuthNamespacesNamespaceIdRunsRouteRoute:
    AuthNamespacesNamespaceIdRunsRouteRouteWithChildren,
  AuthNamespacesNamespaceIdIndexRoute: AuthNamespacesNamespaceIdIndexRoute,
  AuthNamespacesNamespaceIdDatasetsIndexRoute:
    AuthNamespacesNamespaceIdDatasetsIndexRoute,
  AuthNamespacesNamespaceIdDatasetsDatasetIdCompareRoute:
    AuthNamespacesNamespaceIdDatasetsDatasetIdCompareRoute,
  AuthNamespacesNamespaceIdDatasetsDatasetIdIndexRoute:
    AuthNamespacesNamespaceIdDatasetsDatasetIdIndexRoute,
}

const AuthNamespacesRouteRouteWithChildren =
  AuthNamespacesRouteRoute._addFileChildren(AuthNamespacesRouteRouteChildren)

interface AuthRouteRouteChildren {
  AuthNamespacesRouteRoute: typeof AuthNamespacesRouteRouteWithChildren
  AuthUsersUserIdRoute: typeof AuthUsersUserIdRoute
  AuthUsersIndexRoute: typeof AuthUsersIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthNamespacesRouteRoute: AuthNamespacesRouteRouteWithChildren,
  AuthUsersUserIdRoute: AuthUsersUserIdRoute,
  AuthUsersIndexRoute: AuthUsersIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/namespaces': typeof AuthNamespacesRouteRouteWithChildren
  '/users/$userId': typeof AuthUsersUserIdRoute
  '/namespaces/': typeof AuthNamespacesIndexRoute
  '/users': typeof AuthUsersIndexRoute
  '/namespaces/$namespaceId/runs': typeof AuthNamespacesNamespaceIdRunsRouteRouteWithChildren
  '/namespaces/$namespaceId': typeof AuthNamespacesNamespaceIdIndexRoute
  '/namespaces/$namespaceId/runs/$runId': typeof AuthNamespacesNamespaceIdRunsRunIdRoute
  '/namespaces/$namespaceId/datasets': typeof AuthNamespacesNamespaceIdDatasetsIndexRoute
  '/namespaces/$namespaceId/runs/': typeof AuthNamespacesNamespaceIdRunsIndexRoute
  '/namespaces/$namespaceId/datasets/$datasetId/compare': typeof AuthNamespacesNamespaceIdDatasetsDatasetIdCompareRoute
  '/namespaces/$namespaceId/datasets/$datasetId': typeof AuthNamespacesNamespaceIdDatasetsDatasetIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/users/$userId': typeof AuthUsersUserIdRoute
  '/namespaces': typeof AuthNamespacesIndexRoute
  '/users': typeof AuthUsersIndexRoute
  '/namespaces/$namespaceId': typeof AuthNamespacesNamespaceIdIndexRoute
  '/namespaces/$namespaceId/runs/$runId': typeof AuthNamespacesNamespaceIdRunsRunIdRoute
  '/namespaces/$namespaceId/datasets': typeof AuthNamespacesNamespaceIdDatasetsIndexRoute
  '/namespaces/$namespaceId/runs': typeof AuthNamespacesNamespaceIdRunsIndexRoute
  '/namespaces/$namespaceId/datasets/$datasetId/compare': typeof AuthNamespacesNamespaceIdDatasetsDatasetIdCompareRoute
  '/namespaces/$namespaceId/datasets/$datasetId': typeof AuthNamespacesNamespaceIdDatasetsDatasetIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/_auth/namespaces': typeof AuthNamespacesRouteRouteWithChildren
  '/_auth/users/$userId': typeof AuthUsersUserIdRoute
  '/_auth/namespaces/': typeof AuthNamespacesIndexRoute
  '/_auth/users/': typeof AuthUsersIndexRoute
  '/_auth/namespaces/$namespaceId/runs': typeof AuthNamespacesNamespaceIdRunsRouteRouteWithChildren
  '/_auth/namespaces/$namespaceId/': typeof AuthNamespacesNamespaceIdIndexRoute
  '/_auth/namespaces/$namespaceId/runs/$runId': typeof AuthNamespacesNamespaceIdRunsRunIdRoute
  '/_auth/namespaces/$namespaceId/datasets/': typeof AuthNamespacesNamespaceIdDatasetsIndexRoute
  '/_auth/namespaces/$namespaceId/runs/': typeof AuthNamespacesNamespaceIdRunsIndexRoute
  '/_auth/namespaces/$namespaceId/datasets/$datasetId/compare': typeof AuthNamespacesNamespaceIdDatasetsDatasetIdCompareRoute
  '/_auth/namespaces/$namespaceId/datasets/$datasetId/': typeof AuthNamespacesNamespaceIdDatasetsDatasetIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/logout'
    | '/namespaces'
    | '/users/$userId'
    | '/namespaces/'
    | '/users'
    | '/namespaces/$namespaceId/runs'
    | '/namespaces/$namespaceId'
    | '/namespaces/$namespaceId/runs/$runId'
    | '/namespaces/$namespaceId/datasets'
    | '/namespaces/$namespaceId/runs/'
    | '/namespaces/$namespaceId/datasets/$datasetId/compare'
    | '/namespaces/$namespaceId/datasets/$datasetId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/logout'
    | '/users/$userId'
    | '/namespaces'
    | '/users'
    | '/namespaces/$namespaceId'
    | '/namespaces/$namespaceId/runs/$runId'
    | '/namespaces/$namespaceId/datasets'
    | '/namespaces/$namespaceId/runs'
    | '/namespaces/$namespaceId/datasets/$datasetId/compare'
    | '/namespaces/$namespaceId/datasets/$datasetId'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/login'
    | '/logout'
    | '/_auth/namespaces'
    | '/_auth/users/$userId'
    | '/_auth/namespaces/'
    | '/_auth/users/'
    | '/_auth/namespaces/$namespaceId/runs'
    | '/_auth/namespaces/$namespaceId/'
    | '/_auth/namespaces/$namespaceId/runs/$runId'
    | '/_auth/namespaces/$namespaceId/datasets/'
    | '/_auth/namespaces/$namespaceId/runs/'
    | '/_auth/namespaces/$namespaceId/datasets/$datasetId/compare'
    | '/_auth/namespaces/$namespaceId/datasets/$datasetId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
  LogoutRoute: typeof LogoutRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  LoginRoute: LoginRoute,
  LogoutRoute: LogoutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/login",
        "/logout"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/namespaces",
        "/_auth/users/$userId",
        "/_auth/users/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/logout": {
      "filePath": "logout.tsx"
    },
    "/_auth/namespaces": {
      "filePath": "_auth/namespaces/route.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/namespaces/",
        "/_auth/namespaces/$namespaceId/runs",
        "/_auth/namespaces/$namespaceId/",
        "/_auth/namespaces/$namespaceId/datasets/",
        "/_auth/namespaces/$namespaceId/datasets/$datasetId/compare",
        "/_auth/namespaces/$namespaceId/datasets/$datasetId/"
      ]
    },
    "/_auth/users/$userId": {
      "filePath": "_auth/users/$userId.tsx",
      "parent": "/_auth"
    },
    "/_auth/namespaces/": {
      "filePath": "_auth/namespaces/index.tsx",
      "parent": "/_auth/namespaces"
    },
    "/_auth/users/": {
      "filePath": "_auth/users/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/namespaces/$namespaceId/runs": {
      "filePath": "_auth/namespaces/$namespaceId/runs/route.tsx",
      "parent": "/_auth/namespaces",
      "children": [
        "/_auth/namespaces/$namespaceId/runs/$runId",
        "/_auth/namespaces/$namespaceId/runs/"
      ]
    },
    "/_auth/namespaces/$namespaceId/": {
      "filePath": "_auth/namespaces/$namespaceId/index.tsx",
      "parent": "/_auth/namespaces"
    },
    "/_auth/namespaces/$namespaceId/runs/$runId": {
      "filePath": "_auth/namespaces/$namespaceId/runs/$runId.tsx",
      "parent": "/_auth/namespaces/$namespaceId/runs"
    },
    "/_auth/namespaces/$namespaceId/datasets/": {
      "filePath": "_auth/namespaces/$namespaceId/datasets/index.tsx",
      "parent": "/_auth/namespaces"
    },
    "/_auth/namespaces/$namespaceId/runs/": {
      "filePath": "_auth/namespaces/$namespaceId/runs/index.tsx",
      "parent": "/_auth/namespaces/$namespaceId/runs"
    },
    "/_auth/namespaces/$namespaceId/datasets/$datasetId/compare": {
      "filePath": "_auth/namespaces/$namespaceId/datasets/$datasetId/compare.tsx",
      "parent": "/_auth/namespaces"
    },
    "/_auth/namespaces/$namespaceId/datasets/$datasetId/": {
      "filePath": "_auth/namespaces/$namespaceId/datasets/$datasetId/index.tsx",
      "parent": "/_auth/namespaces"
    }
  }
}
ROUTE_MANIFEST_END */
